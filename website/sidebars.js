// sidebars.js
const fs = require('fs');
const path = require('path');

/**
 * Reads the first level-1 markdown heading (# Title)
 * from _catalogue.md if it exists.
 */
function getCatalogueTitle(dir) {
  const catFile = path.join(dir, '_catalogue.md');
  if (fs.existsSync(catFile)) {
    const content = fs.readFileSync(catFile, 'utf-8');
    const match = content.match(/^#\s+(.*)$/m);
    if (match) return match[1].trim();
  }
  return null;
}

/**
 * Builds sidebar categories recursively from folder structure.
 * Each folder can have a _catalogue.md defining its title.
 */
function generateSidebar(dir) {
  const entries = fs.readdirSync(dir, { withFileTypes: true });
  const items = [];

  for (const entry of entries) {
    if (entry.isDirectory()) {
      const subdir = path.join(dir, entry.name);
      const title = getCatalogueTitle(subdir) || entry.name.replace(/_/g, ' ');
      const subitems = generateSidebar(subdir);

      items.push({
        type: 'category',
        label: title,
        collapsed: true,
        items: subitems.length
          ? subitems
          : [{ type: 'autogenerated', dirName: path.relative('docs', subdir) }],
      });
    }
  }

  return items;
}

module.exports = {
  tutorialSidebar: [
    {
      type: 'category',
      label: 'M.Sc. Mathematics',
      collapsed: false,
      items: generateSidebar('docs'),
    },
  ],
};
